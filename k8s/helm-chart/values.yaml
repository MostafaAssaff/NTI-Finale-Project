# Default values for your Helm chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

frontend:
  name: frontend-app
  image:
    repository: 889818960214.dkr.ecr.us-west-2.amazonaws.com/nti-frontend-image
    pullPolicy: IfNotPresent
    # The Jenkins pipeline will automatically update this tag.
    tag: "latest" # frontend-tag
  service:
    # Use LoadBalancer to expose the frontend to the internet
    type: LoadBalancer
    port: 80

backend:
  name: backend-app
  image:
    repository: 889818960214.dkr.ecr.us-west-2.amazonaws.com/nti-backend-image
    pullPolicy: IfNotPresent
    # The Jenkins pipeline will automatically update this tag.
    tag: "latest" # backend-tag
  service:
    # Use ClusterIP because the backend should only be accessible from within the cluster (by the frontend).
    type: ClusterIP
    port: 8080 # Assuming your backend Node.js app runs on port 8080

# --- Standard Helm Chart Optional Values ---

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
