# Stage 1: Use a stable, full-featured image (avoid Alpine issues)
FROM node:18-slim AS build

# Set working directory
WORKDIR /app

# Copy only necessary files first to leverage Docker layer cache
COPY package*.json ./

# Install dependencies with verbose output to see progress in Jenkins
RUN npm install --verbose

# Copy the rest of the application
COPY . .

# Build the frontend app
RUN npm run build

# Stage 2: Serve with Nginx
FROM nginx:alpine

# Inject default.conf inline (no need to include it in your repo)
RUN echo 'server { \
  listen 80; \
  server_name localhost; \
  root /usr/share/nginx/html; \
  index index.html; \
  location / { \
    try_files $uri $uri/ /index.html; \
  } \
}' > /etc/nginx/conf.d/default.conf

# Copy the built static files
COPY --from=build /app/build /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
