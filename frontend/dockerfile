# Stage 1: Use Node.js 16 to avoid OpenSSL 3.0 issues
FROM node:16-slim AS build

# Set working directory
WORKDIR /app

# Copy only necessary files first to leverage Docker layer cache
COPY package*.json ./

# Install dependencies with verbose output to see progress in Jenkins
RUN npm install --verbose

# Copy the rest of the application
COPY . .

# Build the frontend app
RUN npm run build

# Stage 2: Serve with Nginx
FROM nginx:alpine

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the built static files
COPY --from=build /app/build /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
