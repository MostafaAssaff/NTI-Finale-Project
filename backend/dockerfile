# Backend Dockerfile
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install dependencies with optimizations
RUN npm ci --only=production --silent

# Copy application code
COPY . .

# Production stage
FROM nginx:alpine

# Install Node.js in the final stage
RUN apk add --no-cache nodejs npm

# Copy the application from build stage
COPY --from=build /app /app

# Copy nginx configuration
COPY default.conf /etc/nginx/conf.d/default.conf

# Create a startup script
RUN echo '#!/bin/sh' > /start.sh && \
    echo 'node /app/server.js &' >> /start.sh && \
    echo 'nginx -g "daemon off;"' >> /start.sh && \
    chmod +x /start.sh

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# Start both services
CMD ["/start.sh"]
